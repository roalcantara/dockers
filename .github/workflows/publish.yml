name: Publish

on:
  release:
    types:
      - published

env:
  CI: true
  FORCE_COLOR: true
  DOCKER_BUILDKIT: 1
  BUILDKIT_INLINE_CACHE: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        context: [lua/5.1, remark/cli]
    steps:
    - id: image
      run: |
        echo "dockerfile=${CONTEXT}/Dockerfile" >> $GITHUB_OUTPUT
        echo "cst_config=${CONTEXT}/config-cst.yml" >> $GITHUB_OUTPUT
        echo "name=${CONTEXT//\//_}" >> $GITHUB_OUTPUT
        echo "full_name=${{ github.actor }}/${CONTEXT//\//_}" >> $GITHUB_OUTPUT
        echo "latest=${{ github.actor }}/${CONTEXT//\//_}:latest" >> $GITHUB_OUTPUT
        echo "ghcr=ghcr.io/${{ github.actor }}/${CONTEXT//\//_}" >> $GITHUB_OUTPUT
        echo "gh_latest=ghcr.io/${{ github.actor }}/${CONTEXT//\//_}:latest" >> $GITHUB_OUTPUT
      env:
        CONTEXT: ${{ matrix.context }}
    - uses: actions/checkout@v3
    - uses: docker/setup-buildx-action@v2
    - name: Extract metadata (tags, labels) from Git reference and GitHub events for Docker
      uses: docker/metadata-action@v4
      id: meta
      with:
        images: ${{ steps.image.outputs.full_name }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flavor: latest=true
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
    - name: Login at DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push to DockerHub
      uses: docker/build-push-action@v4
      with:
        push: true
        context: ${{ matrix.context }}
        file: ${{ matrix.dockerfile }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  ghcr:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        context: [lua/5.1, remark/cli]
    steps:
    - id: image
      run: |
        echo "dockerfile=${CONTEXT}/Dockerfile" >> $GITHUB_OUTPUT
        echo "cst_config=${CONTEXT}/config-cst.yml" >> $GITHUB_OUTPUT
        echo "name=${CONTEXT//\//_}" >> $GITHUB_OUTPUT
        echo "full_name=${{ github.actor }}/${CONTEXT//\//_}" >> $GITHUB_OUTPUT
        echo "latest=${{ github.actor }}/${CONTEXT//\//_}:latest" >> $GITHUB_OUTPUT
        echo "ghcr=ghcr.io/${{ github.actor }}/${CONTEXT//\//_}" >> $GITHUB_OUTPUT
        echo "gh_latest=ghcr.io/${{ github.actor }}/${CONTEXT//\//_}:latest" >> $GITHUB_OUTPUT
      env:
        CONTEXT: ${{ matrix.context }}
    - uses: actions/checkout@v3
    - uses: docker/setup-buildx-action@v2
    - name: Extract metadata (tags, labels) from Git reference and GitHub events for Docker
      uses: docker/metadata-action@v4
      id: meta
      with:
        images: ${{ steps.image.outputs.ghcr }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flavor: latest=true
        tags: type=semver,pattern={{version}}
    - name: Login at ghcr
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Push to ghcr
      uses: docker/build-push-action@v4
      with:
        push: true
        context: ${{ matrix.context }}
        file: ${{ matrix.dockerfile }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
